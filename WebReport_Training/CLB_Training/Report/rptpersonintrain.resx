<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SqlDataSource1.SelectCommand" xml:space="preserve">
    <value>
SELECT PersonID, 
       tbTrainDay.*, 
       tbPersonTrain.*
FROM TNT_TrainPersonEvaluation
     INNER JOIN
(
    SELECT PNT_Person.PersonID AS SubPersonID, 
           tbInitial.InitialName + ' ' + PNT_Person.FnameT + ' ' + PNT_Person.LnameT AS SubTrainName, 
           PNT_Person.PersonCode, 
           tbPosition.PrositionName, 
           tbdepart.departName
    FROM PNT_Person
         LEFT OUTER JOIN
    (
        SELECT InitialID AS SubInitialID, 
               InitialT AS InitialName
        FROM PNM_Initial
    ) AS tbInitial ON PNT_Person.InitialID = tbInitial.SubInitialID
         LEFT OUTER JOIN
    (
        SELECT PositionID AS SubPositionID, 
               PositionNameT AS PrositionName
        FROM PNM_Position
    ) AS tbPosition ON PNT_Person.PositionID = tbPosition.SubPositionID
         LEFT OUTER JOIN
    (
        SELECT Cmb2ID AS SubCmb2ID, 
               Cmb2NameT AS departName
        FROM PNM_Cmb2
    ) AS tbdepart ON PNT_Person.Cmb2ID = tbdepart.SubCmb2ID
) AS tbPersonTrain ON TNT_TrainPersonEvaluation.PersonID = tbPersonTrain.SubPersonID
     LEFT JOIN
(
    SELECT GUID_Patern AS SubPatern, 
           tbPaternCourse.PaternRefName, 
           tbPaternCourse.Patern_Date, 
           tbPaternCourse.Patern_End, 
           tbPaternCourse.Patern_N, 
           tbPaternCourse.Budget, 
           tbPaternCourse.TypePaternName, 
		   tbPaternCourse.TypeCourseName,
           Group_Name, 
           Organize_Name, 
           TrainDay_TotalHour / 60 AS TotalHour, 
           ROUND((tbPaternCourse.Budget / (TrainDay_TotalHour / 60)), 2) AS BudgetPerson
    FROM TNT_TrainDay
         INNER JOIN
    (
        SELECT TNT_Patern_Course.GUID_Patern AS SubGuidPatern, 
               (b1 + b2 + b3 + b4 + b5 + b6 + b7 + b8 + b9 + b10 + b11 + b12 + b13 + b14 + b15 + b16 + b17 + b18) AS Budget, 
               tbPaternRef.PaternRefName, 
               Group_Name, 
               Organize_Name, 
               Patern_Date, 
               Patern_End, 
               Patern_N, 
               TypePaternName,
			   TypeCourseName
        FROM TNT_Patern_Course
             LEFT OUTER JOIN
        (
            SELECT GUID_Ref AS SubGuidRef, 
                   PaternRef_NameT AS PaternRefName
            FROM TNM_Patern_ReF
        ) AS tbPaternRef ON TNT_Patern_Course.GUID_Ref = tbPaternRef.SubGuidRef
             LEFT JOIN
        (
            SELECT GUID_Type_Patern AS GuidPatern, 
                   Type_PaternNameT AS TypePaternName
            FROM TNM_Type_Patern
        ) AS tbTypePatern ON TNT_Patern_Course.GUID_Type_Patern = tbTypePatern.GuidPatern
             LEFT JOIN
        (
            SELECT GUID_Type AS GuidType, 
                   Type_CourseNameT AS TypeCourseName
            FROM TNM_TypeCourse
        ) AS tbTypeCourse ON TNT_Patern_Course.GUID_Type = tbTypeCourse.GuidType
             LEFT JOIN
        (
            SELECT GUID_Group AS SubGroup, 
                   Group_NameT AS Group_Name
            FROM TNM_GroupCourse
        ) AS tbGroupCourse ON TNT_Patern_Course.GUID_Group = tbGroupCourse.SubGroup
             LEFT JOIN
        (
            SELECT GUID_Organize AS SubOrganize, 
                   Organize_NameT AS Organize_Name
            FROM TNM_Organize
        ) AS tbOrganize ON TNT_Patern_Course.GUID_Organize = tbOrganize.SubOrganize
    ) AS tbPaternCourse ON TNT_TrainDay.GUID_Patern = tbPaternCourse.SubGuidPatern
    GROUP BY GUID_Patern, 
             tbPaternCourse.SubGuidPatern, 
             tbPaternCourse.PaternRefName, 
             Group_Name, 
             Organize_Name, 
             Patern_Date, 
             Patern_End, 
             Budget, 
             Patern_N, 
             TrainDay_TotalHour, 
             TypePaternName,
			 TypeCourseName
) AS tbTrainDay ON TNT_TrainPersonEvaluation.GUID_Patern = tbTrainDay.SubPatern
GROUP BY PersonID, 
         SubPatern, 
         PaternRefName, 
         SubTrainName, 
         PersonCode, 
         PrositionName, 
         departName, 
         SubPersonID, 
         Group_Name, 
         Organize_Name, 
         Patern_Date, 
         Patern_End, 
         Budget, 
         TotalHour, 
         BudgetPerson, 
         TypePaternName, 
		 TypeCourseName,
         Patern_N;</value>
  </data>
  <metadata name="$this.Zoom" type="System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>2</value>
  </metadata>
  <metadata name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
</root>