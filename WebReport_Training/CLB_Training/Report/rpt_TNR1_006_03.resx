<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SqlDataSource1.SelectCommand" xml:space="preserve">
    <value>
SELECT        CONVERT(VARCHAR(50), TNT_Patern_Course.GUID_Patern) AS GUID_Patern, MONTH(TNT_Patern_Course.Patern_Date) AS MONTH_PaterbDate, YEAR(TNT_Patern_Course.Patern_Date) AS Year_PaterbDate, 
                         tbCompany.CompanyName, tbPaternReF.PaternRefName, TNT_Patern_Course.Patern_N, TNT_Patern_Course.Patern_Date, TNT_Patern_Course.Patern_End, tbTrainDay.TrainDay_Time, tbTrainDay.TrainDay_EndTime, 
                         tbInstitueTrain.InstitueTrainName, tbOrganize.OrganizeName, tbTypeCourse.TypeCourseName, tbTypePatern.TypePaternName, tbPaternProfessor.ProfessorName, tbPaternProfessor.Professor_Tel, 
                         tbTrainDayCount.CountPerson, tbTrainDayCount.TotalHour, tbBudget.Budget, tbBudget.Budget / tbTrainDayCount.TotalHour AS BudgetPerson, 0 AS inH, 0 AS inp
FROM            TNT_Patern_Course LEFT OUTER JOIN
                             (SELECT        GUID_Patern AS GuidBudget, b1 + b2 + b3 + b4 + b5 + b6 + b7 + b8 + b9 + b10 + b11 + b12 + b13 + b14 + b15 + b16 + b17 + b18 AS Budget
                               FROM            TNT_Patern_Course) AS tbBudget ON TNT_Patern_Course.GUID_Patern = tbBudget.GuidBudget LEFT OUTER JOIN
                             (SELECT        ID_Company, Company_NameT AS CompanyName
                               FROM            COM_Company) AS tbCompany ON TNT_Patern_Course.CompanyID = tbCompany.ID_Company LEFT OUTER JOIN
                             (SELECT        GUID_Ref AS GuidRef, PaternRef_NameT AS PaternRefName
                               FROM            TNM_Patern_ReF) AS tbPaternReF ON TNT_Patern_Course.GUID_Ref = tbPaternReF.GuidRef LEFT OUTER JOIN
                             (SELECT        GUID_Patern AS GuidPatern, TrainDay_Time, TrainDay_EndTime
                               FROM            TNT_TrainDay) AS tbTrainDay ON TNT_Patern_Course.GUID_Patern = tbTrainDay.GuidPatern LEFT OUTER JOIN
                             (SELECT        GUID_Institue AS GuidInstitue, InstitueTrainNameT AS InstitueTrainName
                               FROM            TNM_InstitueTrain) AS tbInstitueTrain ON TNT_Patern_Course.GUID_Institue = tbInstitueTrain.GuidInstitue LEFT OUTER JOIN
                             (SELECT        GUID_Organize AS GuidOrganize, Organize_NameT AS OrganizeName
                               FROM            TNM_Organize) AS tbOrganize ON TNT_Patern_Course.GUID_Organize = tbOrganize.GuidOrganize LEFT OUTER JOIN
                             (SELECT        GUID_Type AS GuidType, Type_CourseNameT AS TypeCourseName
                               FROM            TNM_TypeCourse) AS tbTypeCourse ON TNT_Patern_Course.GUID_Type = tbTypeCourse.GuidType LEFT OUTER JOIN
                             (SELECT        GUID_Type_Patern AS GuidPatern, Type_PaternNameT AS TypePaternName
                               FROM            TNM_Type_Patern) AS tbTypePatern ON TNT_Patern_Course.GUID_Type_Patern = tbTypePatern.GuidPatern LEFT OUTER JOIN
                             (SELECT        TNT_Patern_Professor.GUID_Patern AS GuidPatern, tbProfessor.ProfessorName, tbProfessor.Professor_Tel
                               FROM            TNT_Patern_Professor LEFT OUTER JOIN
                                                             (SELECT        GUID_Professor AS GuidProfessor, Professor_NameT AS ProfessorName, Professor_Tel
                                                               FROM            TNM_Professor) AS tbProfessor ON TNT_Patern_Professor.GUID_Professor = tbProfessor.GuidProfessor) AS tbPaternProfessor ON 
                         TNT_Patern_Course.GUID_Patern = tbPaternProfessor.GuidPatern LEFT OUTER JOIN
                             (SELECT        TNT_TrainDay.GUID_Patern AS GuidPaternDay, tbTrainPerson.CountPerson, TNT_TrainDay.TrainDay_TotalHour / 60 AS TotalHour
                               FROM            TNT_TrainDay LEFT OUTER JOIN
                                                             (SELECT        GUID_Train AS GuidTrainPerson, COUNT(*) AS CountPerson
                                                               FROM            TNT_TrainPerson
                                                               GROUP BY GUID_Train) AS tbTrainPerson ON TNT_TrainDay.GUID_Train = tbTrainPerson.GuidTrainPerson) AS tbTrainDayCount ON TNT_Patern_Course.GUID_Patern = tbTrainDayCount.GuidPaternDay
ORDER BY MONTH_PaterbDate</value>
  </data>
  <metadata name="$this.Zoom" type="System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>3</value>
  </metadata>
  <metadata name="$this.ShowSnapGrid" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>